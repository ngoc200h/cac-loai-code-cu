using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace thứ đặt từ đầu
{
    public partial class tênForm : Form
    {
        DataTable tbltên;
        //string gt; //giới tính

        public tênForm()
        {
            InitializeComponent();
        }

        private void tênForm_Load(object sender, EventArgs e)
        {
            txtMaPK.Enabled = false;
            btnLuu.Enabled = false;
            btnBoQua.Enabled = true;
            LoadDStên();
            
            //đưa dữ liệu lên combobox
            Database.FillDataToCombo("SELECT MaKhoa, TenKhoa FROM Khoa", cboMaKhoa, "MaKhoa", "TenKhoa");
            cboMaKhoa.SelectedIndex = -1;
            //
            
            //đưa dl trực tiếp lên cbo vì thuộc tính đó ko có khóa ngoại
            string[] th = { "Thứ Hai", "Thứ Ba", "Thứ Tư", "Thứ Năm", "Thứ Sáu", "Thứ Bảy", "Chủ Nhật" };
            foreach (string x in th)
            {
                cboThuHoc.Items.Add(x);
            }
            
            LoadDStên();//gọi tới hàm load khi form đc load
        }
        private void LoadDStên()
        {
            string sql;
            sql = "SELECT * FROM Sinh_Vien";
            tblSV = Database.LoadDataToTable(sql);
            dgvSinhVien.DataSource = tblSV;
            //Sinh_Vien (MaSV, TenSV, MaKhoa, MaLop, NgSinh, GTinh, MaQue, MaDToc, MaCN, MaHeDT, MaChucVu)
            dgvSinhVien.Columns["MaSV"].HeaderText = "Mã SV";
            dgvSinhVien.Columns["TenSV"].HeaderText = "Tên SV";
            dgvSinhVien.Columns["MaKhoa"].HeaderText = "Mã Khoa";
            dgvSinhVien.Columns["MaLop"].HeaderText = "Mã Lớp";
            dgvSinhVien.Columns["NgSinh"].HeaderText = "Ngày Sinh";
            dgvSinhVien.Columns["GTinh"].HeaderText = "Giới Tính";
            dgvSinhVien.Columns["MaQue"].HeaderText = "Mã Quê";
            dgvSinhVien.Columns["MaDToc"].HeaderText = "Mã Dân tộc";
            dgvSinhVien.Columns["MaCN"].HeaderText = "Mã Chuyên ngành";
            dgvSinhVien.Columns["MaHeDT"].HeaderText = "Mã Hệ đào tạo";
            dgvSinhVien.Columns["MaChucVu"].HeaderText = "Mã Chức vụ";
        }
        private void ResetValues()
        {
            txtMaSV.Text = "";
            txtTenSV.Text = "";
            cboMaKhoa.Text = "";
            cboMaLop.Text = "";
            mtbNgaySinh.Text = "";
            //rbtNam.Text = "";
            cboMaQue.Text = "";
            cboMaDT.Text = "";
            cboMaCN.Text = "";
            cboMaHeDT.Text = "";
            cboMaChucVu.Text = "";
        }
        private void btnThem_Click(object sender, EventArgs e)
        {
            btnSua.Enabled = false;
            btnXoa.Enabled = false;
            btnBoQua.Enabled = true;
            btnLuu.Enabled = true;
            btnThem.Enabled = false;
            ResetValues();
            txtMaSV.Focus();
            txtMaSV.Enabled = true;
        }

        private void btnXoa_Click(object sender, EventArgs e)
        {
            string sql;
            if (tblSV.Rows.Count == 0)
            {
                MessageBox.Show("Không còn dữ liệu!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            if (txtMaSV.Text == "")
            {
                MessageBox.Show("Bạn chưa chọn bản ghi nào", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            if (MessageBox.Show("Bạn có muốn xóa không?", "Thông báo", MessageBoxButtons.OKCancel, MessageBoxIcon.Question) == DialogResult.OK)
            {
                sql = "DELETE Sinh_Vien WHERE MaSV=N'" + txtMaSV.Text + "'";
                Database.RunSqlDel(sql);
                LoadDSSV();
                ResetValues();
            }
        }

        private void btnSua_Click(object sender, EventArgs e)
        {
            string sql;
            if (tblSV.Rows.Count == 0)
            {
                MessageBox.Show("Không còn dữ liệu!", "Thông báo", MessageBoxButtons.OK,
                                MessageBoxIcon.Information);
                return;
            }
            if (txtMaSV.Text == "")
            {
                MessageBox.Show("Bạn chưa chọn bản ghi nào", "Thông báo",
                                MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            if (txtTenSV.Text.Trim().Length == 0
                && cboMaKhoa.Text.Trim().Length == 0
                && cboMaLop.Text.Trim().Length == 0
                && mtbNgaySinh.Text.Trim().Length == 0
                && cboMaQue.Text.Trim().Length == 0
                && cboMaDT.Text.Trim().Length == 0
                && cboMaCN.Text.Trim().Length == 0
                && cboMaHeDT.Text.Trim().Length == 0
                && cboMaChucVu.Text.Trim().Length == 0 )
            {
                MessageBox.Show("Bạn chưa nhập đủ dữ liệu", "Thông báo", MessageBoxButtons.OK,
                                MessageBoxIcon.Warning);
                return;
            }
            if (!Database.IsDate(mtbNgaySinh.Text))
            {
                MessageBox.Show("Bạn phải nhập lại ngày sinh", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                mtbNgaySinh.Text = "";
                mtbNgaySinh.Focus();
                return;
            }
            string gt = dgvSinhVien.CurrentRow.Cells["GTinh"].Value.ToString();
            if (gt.Trim() == "Nam") //trim() cắt khoản trắng 2 đầu
            {
                rbtNam.Checked = true;
            }
            else
            {
                rbtNu.Checked = true;
            }
            sql = "UPDATE Sinh_Vien SET  TenSV=N'" + txtTenSV.Text.Trim().ToString() +
                    "',MaKhoa=N'" + cboMaKhoa.SelectedValue.ToString() +
                    "',MaLop=N'" + cboMaLop.SelectedValue.ToString() +
                    "',NgSinh='" + Database.ConvertDateTime(mtbNgaySinh.Text) +
                    "',GTinh=N'" + gt.Trim() +

                    //lệnh lưu cho dữ liệu có trực tiếp ở combobox //dùng cho các button khác nếu cần
                    "," + cboThuHoc.SelectedItem.ToString() +

                    "' WHERE MaSV=N'" + txtMaSV.Text + "'";
            Database.RunSql(sql);
            LoadDSSV();
            ResetValues();
            btnBoQua.Enabled = false;
            txtMaSV.Enabled = false;
        }

        private void btnTimKiem_Click(object sender, EventArgs e)
        {
            string sql;
            if ((cboMaQue.Text == "") 
                && (cboMaCN.Text == "")
                && (cboMaKhoa.Text == ""))
            {
                MessageBox.Show("Hãy nhập một điều kiện tìm kiếm!!!", "Yêu cầu ...",
MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }
            sql = "SELECT * FROM Sinh_Vien WHERE 1=1";
            if (cboMaQue.Text != "")
                sql = sql + " AND MaQue Like N'%" + cboMaQue.SelectedValue + "%'";
            if (cboMaCN.Text != "")
                sql = sql + " AND MaCN Like N'%" + cboMaCN.SelectedValue + "%'";
            if (cboMaKhoa.Text != "")
                sql = sql + " AND MaKhoa Like N'%" + cboMaKhoa.SelectedValue + "%'";
            tblSV = Database.LoadDataToTable(sql);
            if (tblSV.Rows.Count == 0)
                MessageBox.Show("Không có bản ghi thỏa mãn điều kiện!!!", "Thông báo",
                                MessageBoxButtons.OK, MessageBoxIcon.Warning);
            else
                MessageBox.Show("Có " + tblSV.Rows.Count + " bản ghi thỏa mãn điều kiện!!!",
                                "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            dgvSinhVien.DataSource = tblSV;
            ResetValues();
        }
        private void btnBoQua_Click(object sender, EventArgs e)
        {
            ResetValues();
            btnBoQua.Enabled = false;
            btnThem.Enabled = true;
            btnXoa.Enabled = true;
            btnSua.Enabled = true;
            btnLuu.Enabled = false;
            txtMaSV.Enabled = false;
        }

        private void btnLuu_Click(object sender, EventArgs e)
        {
            string sql;
            string gt = dgvSinhVien.CurrentRow.Cells["GTinh"].Value.ToString();
            sql = "SELECT MaSV FROM Sinh_Vien WHERE MaSV=N'" + txtMaSV.Text.Trim() + "'";
            if (gt.Trim() == "Nam") //trim() cắt khoản trắng 2 đầu
            {
                rbtNam.Checked = true;
            }
            else
            {
                rbtNu.Checked = true;
            }
            if (Database.CheckKey(sql))
            {
                MessageBox.Show("Mã SV này đã có, bạn phải nhập mã khác", "Thông báo",
MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtMaSV.Focus();
                txtMaSV.Text = "";
                return;
            }
            sql = "INSERT INTO Sinh_Vien (MaSV, TenSV, MaKhoa, MaLop, NgSinh, GTinh, MaQue, MaDToc, MaCN, MaHeDT, MaChucVu) " +
                    "VALUES(N'" + txtMaSV.Text.Trim() +
                    "',N'" + txtTenSV.Text.Trim() + 
                    "',N'" + cboMaKhoa.SelectedValue.ToString() + 
                    "',N'" + cboMaLop.SelectedValue.ToString() +
                    "','" + Database.ConvertDateTime(mtbNgaySinh.Text) +
                    "',N'" + gt.Trim() +

                    //lệnh lưu cho dữ liệu có trực tiếp ở combobox //dùng cho các button khác nếu cần
                    "," + cboThuHoc.SelectedItem.ToString() +

                    "',N'" + cboMaChucVu.SelectedValue.ToString() + "')";
            Database.RunSql(sql);
            LoadDSSV();
            ResetValues();
            btnXoa.Enabled = true;
            btnThem.Enabled = true;
            btnSua.Enabled = true;
            btnBoQua.Enabled = false;
            btnLuu.Enabled = false;
        }

        private void dgvSinhVien_Click(object sender, EventArgs e)
        {
            string ma;
            
            //Giới tính
            string gt = dgvSinhVien.CurrentRow.Cells["GTinh"].Value.ToString();
            if (gt.Trim() == "Nam") //trim() cắt khoản trắng 2 đầu
            {
                rbtNam.Checked = true;
            }
            else
            {
                rbtNu.Checked = true;
            }
            
            if (tblSV.Rows.Count == 0)
            {
                MessageBox.Show("Không có dữ liệu!", "Thông báo", MessageBoxButtons.OK,
                                MessageBoxIcon.Information);
                return;
            } //Sinh_Vien (MaSV, TenSV, MaKhoa, MaLop, NgSinh, GTinh, MaQue, MaDToc, MaCN, MaHeDT, MaChucVu)
            txtMaSV.Text = dgvSinhVien.CurrentRow.Cells["MaSV"].Value.ToString(); //loại bthg
            txtTenSV.Text = dgvSinhVien.CurrentRow.Cells["TenSV"].Value.ToString();
            ma = dgvSinhVien.CurrentRow.Cells["MaKhoa"].Value.ToString(); //loại cbb
            cboMaKhoa.Text = Database.GetFieldValues("SELECT TenKhoa FROM Khoa WHERE MaKhoa = N'" + ma + "'");

            mtbNgaySinh.Text = dgvSinhVien.CurrentRow.Cells["NgSinh"].Value.ToString();
            ma = dgvSinhVien.CurrentRow.Cells["MaQue"].Value.ToString();
            cboMaQue.Text = Database.GetFieldValues("SELECT TenQue FROM Que WHERE MaQue = N'" + ma + "'");
            ma = dgvSinhVien.CurrentRow.Cells["MaDToc"].Value.ToString();

            btnSua.Enabled = true;
            btnXoa.Enabled = true;
            btnBoQua.Enabled = true;
            txtMaSV.Enabled = true;
        }
    }
}
